{"version":3,"sources":["utils/wallet.js","App.js","reportWebVitals.js","index.js"],"names":["Wallet","require","default","generate","num","setPairs","n","pairs","index","addressData","push","getPrivateKeyString","getAddressString","genKeyPairs","downloadForSender","total","exportName","addresses","each","Math","floor","length","p","address","download","encodeURIComponent","downloadObjectAsJson","exportObj","JSON","stringify","dataStr","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","App","useState","setN","setTotal","className","onClick","value","onChange","e","target","style","downloadPairs","downloadAddresses","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.699d4db3.chunk.js","sourcesContent":["const Wallet = require('ethereumjs-wallet').default\n\nexport function genKeyPairs(n) {\n    let pairs = [];\n    if ( n > 0 ) {\n        for(let index=0; index < n; index++) {\n            let addressData = Wallet.generate();\n            pairs.push({\"private_key\":addressData.getPrivateKeyString(), \"address\":addressData.getAddressString()})\n        }\n    }\n    return pairs;\n}","import { useState } from 'react';\nimport './App.css';\nimport { genKeyPairs } from './utils/wallet';\n\nfunction generate(num, setPairs) {\n  setPairs(genKeyPairs(num));\n}\n\nfunction downloadPairs(pairs) {\n  downloadObjectAsJson(pairs, \"keypairs\")\n}\n\nfunction downloadAddresses(pairs) {\n  let addresses = [];\n  for (let index = 0; index < pairs.length; index++) {\n    const p = pairs[index];\n    addresses.push(p.address);\n  }\n  downloadObjectAsJson(addresses, \"addresses\")\n}\n\nfunction downloadForSender(pairs, total) {\n  let addresses = \"\";\n  let each = Math.floor((total / pairs.length) * 100000000)/100000000;\n  for (let index = 0; index < pairs.length; index++) {\n    const p = pairs[index];\n    addresses += `${p.address},${each}\\n`;\n  }\n  downloadObjectAsText(addresses, \"bulksender\")\n}\n\nfunction downloadObjectAsText(exportObj, exportName){\n  var dataStr = \"data:text/plain;charset=utf-8,\" + encodeURIComponent(exportObj);\n  download(dataStr, exportName);\n}\n\nfunction downloadObjectAsJson(exportObj, exportName){\n  var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(exportObj, null, 2));\n  download(dataStr, exportName);\n}\n\nfunction download(dataStr, exportName) {\n  var downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute(\"href\",     dataStr);\n  downloadAnchorNode.setAttribute(\"download\", exportName + \".json\");\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n\nfunction App() {\n  const [n, setN] = useState(10);\n  const [total, setTotal] = useState(0);\n  const [pairs, setPairs] = useState([]);\n  return (\n    <div className=\"App\">\n      <h3>Generates key pairs</h3>\n      <p>Click \"Generate\" button to re-generate key pairs.</p>\n      <div><button onClick={ () => generate(n, setPairs) }>Generate</button> <input value={n} onChange={ (e) => setN(e.target.value) } /> <button onClick={() => { setPairs([])}} >Clear</button></div>\n      { \n        pairs.length > 0 ? \n        <div style={{\"marginTop\":\"20px\"}}>\n          <button onClick={()=>{downloadPairs(pairs)}} className=\"link\">Download { pairs.length } Key pairs</button> \n          <span style={{\"margin\":\"10px\"}}>|</span>\n          <button onClick={()=>{downloadAddresses(pairs)}} className=\"link\">Download { pairs.length } addresses</button>\n          <div style={{\"marginTop\":\"20px\"}}>\n            Distribute Total <input value={total} onChange={ (e) => setTotal(e.target.value) } /> Tokens \n            &nbsp; â†’ &nbsp;\n            <button onClick={()=>{downloadForSender(pairs, total)}} className=\"link\">Download TXT file for Token BulkSender</button>\n          </div>\n        </div> \n        : null \n      }\n      \n      <hr />\n      <a id=\"downloadAnchorElem\" style={{\"display\":\"none\"}}></a>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}